From 4d760fd5b92753b3e48430dd9fa54e6719bd58c3 Mon Sep 17 00:00:00 2001
From: Yan <yan-wyb@foxmail.com>
Date: Tue, 14 Dec 2021 14:05:54 +0800
Subject: [PATCH 2/2] add npu support for VIM3/VIM3L

Signed-off-by: Yan <yan-wyb@foxmail.com>
---
 drivers/staging/npu/Kbuild                                 | 7 ++++---
 .../allocator/default/gc_hal_kernel_allocator_dmabuf.c     | 2 ++
 .../default/gc_hal_kernel_allocator_user_memory.c          | 6 ++++--
 drivers/staging/npu/os/linux/kernel/gc_hal_kernel_debug.h  | 2 +-
 .../staging/npu/os/linux/kernel/gc_hal_kernel_debugfs.h    | 2 +-
 drivers/staging/npu/os/linux/kernel/gc_hal_kernel_os.c     | 6 ++++--
 6 files changed, 16 insertions(+), 9 deletions(-)

diff --git a/drivers/staging/npu/Kbuild b/drivers/staging/npu/Kbuild
index 939c352b6253..87d451c0c89b 100755
--- a/drivers/staging/npu/Kbuild
+++ b/drivers/staging/npu/Kbuild
@@ -92,12 +92,13 @@ MODULE_NAME ?= galcore
 CUSTOMER_ALLOCATOR_OBJS    ?=
 ALLOCATOR_ARRAY_H_LOCATION ?= $(OS_KERNEL_DIR)/allocator/default/
 
-EXTRA_CFLAGS += -Werror
+EXTRA_CFLAGS += -Werror -Wno-implicit-fallthrough
 
 OBJS := $(OS_KERNEL_DIR)/gc_hal_kernel_device.o \
         $(OS_KERNEL_DIR)/gc_hal_kernel_linux.o \
         $(OS_KERNEL_DIR)/gc_hal_kernel_math.o \
         $(OS_KERNEL_DIR)/gc_hal_kernel_os.o \
+        $(OS_KERNEL_DIR)/gc_hal_kernel_debug.o \
         $(OS_KERNEL_DIR)/gc_hal_kernel_debugfs.o \
         $(OS_KERNEL_DIR)/gc_hal_kernel_allocator.o \
         $(OS_KERNEL_DIR)/allocator/default/gc_hal_kernel_allocator_user_memory.o \
@@ -122,12 +123,12 @@ endif
 OBJS += $(HAL_KERNEL_DIR)/gc_hal_kernel.o \
         $(HAL_KERNEL_DIR)/gc_hal_kernel_command.o \
         $(HAL_KERNEL_DIR)/gc_hal_kernel_db.o \
-        $(HAL_KERNEL_DIR)/gc_hal_kernel_debug.o \
         $(HAL_KERNEL_DIR)/gc_hal_kernel_event.o \
         $(HAL_KERNEL_DIR)/gc_hal_kernel_heap.o \
         $(HAL_KERNEL_DIR)/gc_hal_kernel_mmu.o \
-        $(HAL_KERNEL_DIR)/gc_hal_kernel_video_memory.o \
         $(HAL_KERNEL_DIR)/gc_hal_kernel_power.o \
+        $(HAL_KERNEL_DIR)/gc_hal_kernel_video_memory.o \
+        $(HAL_KERNEL_DIR)/gc_hal_kernel_security.o \
         $(HAL_KERNEL_DIR)/gc_hal_kernel_security_v1.o \
 		$(HAL_KERNEL_DIR)/gc_hal_kernel_preemption.o
 
diff --git a/drivers/staging/npu/os/linux/kernel/allocator/default/gc_hal_kernel_allocator_dmabuf.c b/drivers/staging/npu/os/linux/kernel/allocator/default/gc_hal_kernel_allocator_dmabuf.c
index ddb026850f42..d3f52af9c42e 100644
--- a/drivers/staging/npu/os/linux/kernel/allocator/default/gc_hal_kernel_allocator_dmabuf.c
+++ b/drivers/staging/npu/os/linux/kernel/allocator/default/gc_hal_kernel_allocator_dmabuf.c
@@ -67,6 +67,8 @@
 #include <linux/dma-buf.h>
 #include <linux/platform_device.h>
 
+MODULE_IMPORT_NS(DMA_BUF);
+
 #define _GC_OBJ_ZONE gcvZONE_OS
 
 /* Descriptor of a dma_buf imported. */
diff --git a/drivers/staging/npu/os/linux/kernel/allocator/default/gc_hal_kernel_allocator_user_memory.c b/drivers/staging/npu/os/linux/kernel/allocator/default/gc_hal_kernel_allocator_user_memory.c
index f4cb89ebe8b2..db3af23c90cd 100644
--- a/drivers/staging/npu/os/linux/kernel/allocator/default/gc_hal_kernel_allocator_user_memory.c
+++ b/drivers/staging/npu/os/linux/kernel/allocator/default/gc_hal_kernel_allocator_user_memory.c
@@ -317,7 +317,7 @@ static int import_pfn_map(gckOS Os, struct um_desc *um,
     {
         spinlock_t *ptl;
         pgd_t *pgd;
-#if LINUX_VERSION_CODE >= KERNEL_VERSION (5,9,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION (5,9,0) && LINUX_VERSION_CODE <= KERNEL_VERSION (5,12,0)
         p4d_t *p4d;
 #endif
         pud_t *pud;
@@ -335,7 +335,9 @@ static int import_pfn_map(gckOS Os, struct um_desc *um,
     && LINUX_VERSION_CODE >= KERNEL_VERSION (4,11,0)
         pud = pud_offset((p4d_t*)pgd, addr);
 #else
-#if LINUX_VERSION_CODE >= KERNEL_VERSION (5,9,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION (5,12,0)
+		pud = pud_offset((p4d_t*)pgd, addr);
+#elif LINUX_VERSION_CODE >= KERNEL_VERSION (5,9,0)
         p4d = p4d_offset(pgd, addr);
         if (p4d_none(READ_ONCE(*p4d)))
             goto err;
diff --git a/drivers/staging/npu/os/linux/kernel/gc_hal_kernel_debug.h b/drivers/staging/npu/os/linux/kernel/gc_hal_kernel_debug.h
index a41838026076..7d8dd8efecbc 100644
--- a/drivers/staging/npu/os/linux/kernel/gc_hal_kernel_debug.h
+++ b/drivers/staging/npu/os/linux/kernel/gc_hal_kernel_debug.h
@@ -59,7 +59,7 @@
 #include <gc_hal_kernel_linux.h>
 #include <linux/spinlock.h>
 #include <linux/time.h>
-#include <stdarg.h>
+#include <linux/stdarg.h>
 
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(4,14,0)
 #include <linux/nmi.h>
diff --git a/drivers/staging/npu/os/linux/kernel/gc_hal_kernel_debugfs.h b/drivers/staging/npu/os/linux/kernel/gc_hal_kernel_debugfs.h
index dc0257fff5d2..e8c504ddaf31 100644
--- a/drivers/staging/npu/os/linux/kernel/gc_hal_kernel_debugfs.h
+++ b/drivers/staging/npu/os/linux/kernel/gc_hal_kernel_debugfs.h
@@ -53,7 +53,7 @@
 *****************************************************************************/
 
 
-#include <stdarg.h>
+#include <linux/stdarg.h>
 
 #ifndef __gc_hal_kernel_debugfs_h_
 #define __gc_hal_kernel_debugfs_h_
diff --git a/drivers/staging/npu/os/linux/kernel/gc_hal_kernel_os.c b/drivers/staging/npu/os/linux/kernel/gc_hal_kernel_os.c
index 794173d157d2..1c63d1875276 100644
--- a/drivers/staging/npu/os/linux/kernel/gc_hal_kernel_os.c
+++ b/drivers/staging/npu/os/linux/kernel/gc_hal_kernel_os.c
@@ -462,7 +462,7 @@ _QueryProcessPageTable(
         struct vm_area_struct *vma;
         spinlock_t *ptl;
         pgd_t *pgd;
-#if LINUX_VERSION_CODE >= KERNEL_VERSION (5,9,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION (5,9,0) && LINUX_VERSION_CODE <= KERNEL_VERSION (5,12,0)
         p4d_t *p4d;
 #endif
         pud_t *pud;
@@ -491,7 +491,9 @@ _QueryProcessPageTable(
     && LINUX_VERSION_CODE >= KERNEL_VERSION (4,11,0)
         pud = pud_offset((p4d_t*)pgd, logical);
 #else
-#if LINUX_VERSION_CODE >= KERNEL_VERSION (5,9,0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION (5,12,0)
+		pud = pud_offset((p4d_t*)pgd, logical);
+#elif LINUX_VERSION_CODE >= KERNEL_VERSION (5,9,0)
         p4d = p4d_offset(pgd, logical);
         if (p4d_none(READ_ONCE(*p4d)))
             return gcvSTATUS_NOT_FOUND;
-- 
2.25.1

